plugins {

	id 'java'

	id 'org.springframework.boot' version '3.1.1'

	id 'io.spring.dependency-management' version '1.1.2'

}


group = 'com.demo.soap.consume.ws'

version = '0.0.1-SNAPSHOT'


java {

	sourceCompatibility = '17'

}


ext.jaxwsSourceDir = "src/main/java"


configurations {

	jaxws

}


repositories {

	mavenCentral()

}

	

task wsimport {

	description = 'Generate classes from wsdl using wsimport'


	doLast {

		project.mkdir(jaxwsSourceDir)

		ant {

			taskdef(name: 'wsimport',

					classname: 'com.sun.tools.ws.ant.WsImport',

					classpath: configurations.jaxws.asPath

			)

			wsimport(

					keep: true,

					destdir: jaxwsSourceDir,

					extension: "true",

					verbose: true,

					wsdl: "http://localhost:8080/ws/students.wsdl",

					xnocompile: true,

					package: "com.soap.soapws.wsdl") {

				xjcarg(value: "-XautoNameResolution")

			}

		}

	}

}


sourceSets {

	main {

		java.srcDirs += jaxwsSourceDir

	}

}


compileJava {

	dependsOn wsimport

}	

	

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.boot:spring-boot-starter-web-services'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation ('org.springframework.boot:spring-boot-starter-web-services') {

		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'

	}

	jaxws 'com.sun.xml.ws:jaxws-tools:3.0.0',

			'jakarta.xml.ws:jakarta.xml.ws-api:3.0.0',

			'jakarta.xml.bind:jakarta.xml.bind-api:3.0.0',

			'jakarta.activation:jakarta.activation-api:2.0.0',

			'com.sun.xml.ws:jaxws-rt:3.0.0'

			

	implementation 'com.sun.xml.ws:jaxws-rt:2.3.2'

}


test {

    useJUnitPlatform()

}


tasks.named('test') {

	useJUnitPlatform()

}